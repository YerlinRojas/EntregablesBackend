<h1>Productos en tiempo real</h1>

<hr>
<h3>Formulario Ingreso de productos</h3>

<form id="addProductForm" action="/realtimeproducts" method="POST">
<div class="containerform">
Title:<input name="title" type="text" id="title" placeholder="title" required>
Description:<input name="description" type="text" id="description" placeholder="Description" required>
Price:<input name="price" type="number" id="price" placeholder="Price" required>
Category:<input name="category" type="text" id="categeory" placeholder="category" required>
Thumbnail:<input name="thumbnail" type="text" id="thumbnail" placeholder="thumbnail" required>
Code:<input name="code" type="number" id="code" placeholder="code" required>
Stock:<input name="stock" type="number" id="stock" placeholder="Stock" required>
  <input type="submit" value="Agregar producto">
</div>
</form> 
















{{!-- 
<hr>
<h3>Eliminar Producto</h3>
ID:<input type="text" id="id" placeholder="Ingresar ID product">
<input id="delete" type="button" value="Eliminar producto">

<hr>
<h3>Tabla de productos</h3>
<table class="table" border="1px" id="table">
  <th>ID:</th>
   <th>Title:</th>
   <th>Description:</th>
   <th>Price:</th>
   <th>Category:</th>
   <th>Thumbnail:</th>
   <th>Code:</th>
   <th>Stock:</th>
    {{#each products}}
    <tr>
    <td>{{this.id}}</td>
    <td>{{this.title}}</td>
    <td>{{this.description}}</td>
    <td>{{this.price}}</td>
    <td>{{this.categeory}}</td>
    <td>{{this.thumbnail}}</td>
    <td>{{this.code}}</td>
    <td>{{this.stock}}</td>
    </tr>
  {{/each}}

</table>


<script src="/socket.io/socket.io.js"></script>
<script>
  const //socket = io();

// Evento para enviar el formulario y agregar un nuevo producto
//document.getElementById('addProductForm').addEventListener('submit', (event) => {
//event.preventDefault() // Evitar el envío del formulario por defecto

  //  const title = document.getElementById('title').value.trim()
    //const description = document.getElementById('description').value.trim()
 //   const price = document.getElementById('price').value.trim()
   // const categeory = document.getElementById('categeory').value.trim()
    //const thumbnail = document.getElementById('thumbnail').value.trim()
   // const code = document.getElementById('code').value.trim()
   // const stock = document.getElementById('stock').value.trim()


 if (title !== ''){ 

  //socket.emit('addProduct',{title,description,price,categeory,thumbnail,code,stock})

      // Limpiar los campos del formulario
    //  document.getElementById('title').value = '';
     // document.getElementById('description').value = '';
      //document.getElementById('price').value = '';
      //document.getElementById('categeory').value = '';
      //document.getElementById('thumbnail').value = '';
     // document.getElementById('code').value = '';
   //   document.getElementById('stock').value = '';
    }
  })

  // Evento para eliminar un producto
 // document.getElementById('delete').addEventListener('click', (event) => {
   // event.preventDefault() 

   // const id = document.getElementById('id').value.trim();

    if (//id !== '') {
      // Enviar el ID del producto a eliminar al servidor
      //socket.emit('deleteProduct', id)
      //document.getElementById('id').value = '';
    }
  })

 // Evento para recibir la lista de productos actualizada
  //socket.on('productAdded', async(products)=>{
    await updateProductList(products)
})

// Evento después de eliminar un producto
  //socket.on('productDeleted', async(products) => {
    await updateProductList(products)
  })


 // Función para actualizar la lista de productos en la vista
  function // updateProductList(products) {
    const //productList = document.getElementById('table');
    //productList.innerHTML = `
      <tr>
        <th>ID:</th>
        <th>Title:</th>
        <th>Description:</th>
        <th>Price:</th>
        <th>Categeory:</th>
        <th>Thumbnail:</th>
        <th>Code:</th>
        <th>Stock:</th>
      </tr>
    `

    products.forEach((product) => {
      //productList.innerHTML += `
        <tr>
          <td>${product.id}</td>
          <td>${product.title}</td>
          <td>${product.description}</td>
          <td>${product.price}</td>
          <td>${product.categeory}</td>
          <td>${product.thumbnail}</td>
          <td>${product.code}</td>
          <td>${product.stock}</td>
        </tr>
      `
    })
  }
</script> --}}